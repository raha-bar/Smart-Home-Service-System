import { useMutation } from '@tanstack/react-query';
import api from '../lib/api';
import { useAuth } from '../context/AuthContext.jsx';
import { useNavigate, Link } from 'react-router-dom';

export default function Register() {
  const { login } = useAuth();
  const nav = useNavigate();

  const mutation = useMutation({
    mutationFn: (payload) => api.post('/auth/register', payload).then((r) => r.data),
    onSuccess: (data) => {
      login(data);
      nav('/');
    }
  });

  function onSubmit(e) {
    e.preventDefault();
    const fd = new FormData(e.currentTarget);
    const name = fd.get('name');
    const email = fd.get('email');
    const password = fd.get('password');
    mutation.mutate({ name, email, password });
  }

  return (
    <form onSubmit={onSubmit} className="form card">
      <h2>Create account</h2>
      <label>Name<input name="name" className="input" required /></label>
      <label>Email<input name="email" type="email" className="input" required /></label>
      <label>Password<input name="password" type="password" className="input" required minLength={6} /></label>
      <button className="btn btn-primary" type="submit" disabled={mutation.isPending}>
        {mutation.isPending ? 'Creatingâ€¦' : 'Create account'}
      </button>
      {mutation.isError && <p className="error mono">{mutation.error.message}</p>}
      <p className="muted">Already have an account? <Link to="/login">Login</Link></p>
    </form>
  );
}
