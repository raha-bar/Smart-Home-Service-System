{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\n\nconst handleResponse = async response => {\n  const data = await response.json();\n  if (!response.ok) {\n    // If response is not OK, throw an error with the backend message\n    throw new Error(data.message || data.error || 'Something went wrong');\n  }\n  return data;\n};\nexport const registerUser = async userData => {\n  const response = await fetch(`${API_BASE_URL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return handleResponse(response);\n};\nexport const loginUser = async credentials => {\n  const response = await fetch(`${API_BASE_URL}/users/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  return handleResponse(response);\n};\nexport const getServices = async () => {\n  const response = await fetch(`${API_BASE_URL}/services`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return handleResponse(response);\n};\n\n// add more API calls here as needed for other features\n// For example:\n/*\r\nexport const createBooking = async (bookingData, token) => {\r\n  const response = await fetch(`${API_BASE_URL}/bookings`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // If you implement auth middleware\r\n    },\r\n    body: JSON.stringify(bookingData),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n*/","map":{"version":3,"names":["API_BASE_URL","handleResponse","response","data","json","ok","Error","message","error","registerUser","userData","fetch","method","headers","body","JSON","stringify","loginUser","credentials","getServices"],"sources":["D:/8th Semester/CSE470/Smart_Home_Service_Booking/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\r\n\r\nconst handleResponse = async (response) => {\r\n  const data = await response.json();\r\n  if (!response.ok) {\r\n    // If response is not OK, throw an error with the backend message\r\n    throw new Error(data.message || data.error || 'Something went wrong');\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  const response = await fetch(`${API_BASE_URL}/users/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(userData),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  const response = await fetch(`${API_BASE_URL}/users/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const getServices = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/services`, {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// add more API calls here as needed for other features\r\n// For example:\r\n/*\r\nexport const createBooking = async (bookingData, token) => {\r\n  const response = await fetch(`${API_BASE_URL}/bookings`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // If you implement auth middleware\r\n    },\r\n    body: JSON.stringify(bookingData),\r\n  });\r\n  return handleResponse(response);\r\n};\r\n*/\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACK,KAAK,IAAI,sBAAsB,CAAC;EACvE;EACA,OAAOL,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,iBAAiB,EAAE;IAC7DY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAOT,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMe,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,MAAMhB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,cAAc,EAAE;IAC1DY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,WAAW;EAClC,CAAC,CAAC;EACF,OAAOjB,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMjB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,WAAW,EAAE;IACvDY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACF,OAAOZ,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}